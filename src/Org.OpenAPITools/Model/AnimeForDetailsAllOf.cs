/*
 * MyAnimeList API (beta ver.)
 *
 * MyAnimeList.net is the property of MyAnimeList Co.,Ltd. All Rights Reserved.  ## Versioning  There are multiple versions of the API. You can specify a version by including it in the request uri:  (During closed beta, version starts with '0.')  `https://api.myanimelist.net/v2`  The version is incremented if any backwards incompatible changes are introduced to the API.  Examples of backwards incompatible changes are belows:  - Removing existing endpoints. - Removing existing fields of API responses. - Changing mean of the existing fields.  On the other hand, belows are examples of backwards compatible changes:  - Adding new endpoints. - Adding new optional request parameters. - Adding new fields to existing API responses. - Changing the order of fields in existing API responses. - Changing the contents of fields that suffixed by `_formatted`.   ## Common formats  ### List / Pagination  ```json {   \"data\": [     {...},     {...},     ...   ],   \"paging\": {     \"previous\": \"https://xxx\",     \"next\": \"https://xxx\"   } } ```      ### Date / Time format  <table> <tr> <th>Format <th>Type <th>Sample <th>Description </tr>  <tr> <td>date-time <td>string <td>\"2015-03-02T06:03:11+00:00\"  <td>ISO 8601 </tr>      <tr> <td>date <td>string <td>\"2017-10-23\" or <br>\"2017-10\" or <br>\"2017\" <td> </tr>  <tr> <td>time <td>string <td>\"01:35\" <td> </tr>  </table>  ### Error format   ```json {   \"error\": \"invalid_token\"   \"message\": \"token is invalid\", } ```  ## Common parameters  ### Parameters for endpoints that return a list  | Name | Description | | - -- | - -- | | limit |  | | offset |  |  ### Choosing fields  By default, the API doesn’t return all fields.  You can choose the fields that you want returned with the `fields` parameter.  Example:  ``` fields=synopsis,my_list_status{priority,comments} ```  ### Not Safe For Work  By default, some APIs don’t return nsfw content.  You can control this behavior with the `nsfw` parameter.  | Name | Description | | - -- | - -- | | nsfw | `true` or `false` |   ## Common status codes  | Status code | Error code | Description | | - -- - | - -- - | - -- - | | 400 Bad Request | - | Invalid Parameters | | 401 Unauthorized | invalid_token | Expired access tokens, Invalid access tokens, etc. | | 403 Forbidden | - | DoS detected etc. | | 404 Not Found | - | |  # Authentication  <!- - ReDoc-Inject: <security-definitions> - ->
 *
 * The version of the OpenAPI document: 2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AnimeForDetailsAllOf
    /// </summary>
    [DataContract(Name = "AnimeForDetails_allOf")]
    public partial class AnimeForDetailsAllOf : IEquatable<AnimeForDetailsAllOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AnimeForDetailsAllOf" /> class.
        /// </summary>
        /// <param name="pictures">You cannot contain this field in a list. .</param>
        /// <param name="background">The API strips BBCode tags from the result.  You cannot contain this field in a list.  .</param>
        /// <param name="relatedAnime">You cannot contain this field in a list. .</param>
        /// <param name="relatedManga">You cannot contain this field in a list. .</param>
        /// <param name="recommendations">Summary of recommended anime for those who like this anime.  You cannot contain this field in a list. .</param>
        /// <param name="statistics">statistics.</param>
        public AnimeForDetailsAllOf(List<Picture> pictures = default(List<Picture>), string background = default(string), List<RelatedAnimeEdge> relatedAnime = default(List<RelatedAnimeEdge>), List<RelatedMangaEdge> relatedManga = default(List<RelatedMangaEdge>), List<AnimeRecommendationAggregationEdgeBase> recommendations = default(List<AnimeRecommendationAggregationEdgeBase>), Object statistics = default(Object))
        {
            this.Pictures = pictures;
            this.Background = background;
            this.RelatedAnime = relatedAnime;
            this.RelatedManga = relatedManga;
            this.Recommendations = recommendations;
            this.Statistics = statistics;
        }

        /// <summary>
        /// You cannot contain this field in a list. 
        /// </summary>
        /// <value>You cannot contain this field in a list. </value>
        [DataMember(Name = "pictures", EmitDefaultValue = false)]
        public List<Picture> Pictures { get; set; }

        /// <summary>
        /// The API strips BBCode tags from the result.  You cannot contain this field in a list.  
        /// </summary>
        /// <value>The API strips BBCode tags from the result.  You cannot contain this field in a list.  </value>
        [DataMember(Name = "background", EmitDefaultValue = true)]
        public string Background { get; set; }

        /// <summary>
        /// You cannot contain this field in a list. 
        /// </summary>
        /// <value>You cannot contain this field in a list. </value>
        [DataMember(Name = "related_anime", EmitDefaultValue = false)]
        public List<RelatedAnimeEdge> RelatedAnime { get; set; }

        /// <summary>
        /// You cannot contain this field in a list. 
        /// </summary>
        /// <value>You cannot contain this field in a list. </value>
        [DataMember(Name = "related_manga", EmitDefaultValue = false)]
        public List<RelatedMangaEdge> RelatedManga { get; set; }

        /// <summary>
        /// Summary of recommended anime for those who like this anime.  You cannot contain this field in a list. 
        /// </summary>
        /// <value>Summary of recommended anime for those who like this anime.  You cannot contain this field in a list. </value>
        [DataMember(Name = "recommendations", EmitDefaultValue = false)]
        public List<AnimeRecommendationAggregationEdgeBase> Recommendations { get; set; }

        /// <summary>
        /// Gets or Sets Statistics
        /// </summary>
        [DataMember(Name = "statistics", EmitDefaultValue = false)]
        public Object Statistics { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AnimeForDetailsAllOf {\n");
            sb.Append("  Pictures: ").Append(Pictures).Append("\n");
            sb.Append("  Background: ").Append(Background).Append("\n");
            sb.Append("  RelatedAnime: ").Append(RelatedAnime).Append("\n");
            sb.Append("  RelatedManga: ").Append(RelatedManga).Append("\n");
            sb.Append("  Recommendations: ").Append(Recommendations).Append("\n");
            sb.Append("  Statistics: ").Append(Statistics).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AnimeForDetailsAllOf);
        }

        /// <summary>
        /// Returns true if AnimeForDetailsAllOf instances are equal
        /// </summary>
        /// <param name="input">Instance of AnimeForDetailsAllOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AnimeForDetailsAllOf input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Pictures == input.Pictures ||
                    this.Pictures != null &&
                    input.Pictures != null &&
                    this.Pictures.SequenceEqual(input.Pictures)
                ) && 
                (
                    this.Background == input.Background ||
                    (this.Background != null &&
                    this.Background.Equals(input.Background))
                ) && 
                (
                    this.RelatedAnime == input.RelatedAnime ||
                    this.RelatedAnime != null &&
                    input.RelatedAnime != null &&
                    this.RelatedAnime.SequenceEqual(input.RelatedAnime)
                ) && 
                (
                    this.RelatedManga == input.RelatedManga ||
                    this.RelatedManga != null &&
                    input.RelatedManga != null &&
                    this.RelatedManga.SequenceEqual(input.RelatedManga)
                ) && 
                (
                    this.Recommendations == input.Recommendations ||
                    this.Recommendations != null &&
                    input.Recommendations != null &&
                    this.Recommendations.SequenceEqual(input.Recommendations)
                ) && 
                (
                    this.Statistics == input.Statistics ||
                    (this.Statistics != null &&
                    this.Statistics.Equals(input.Statistics))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pictures != null)
                {
                    hashCode = (hashCode * 59) + this.Pictures.GetHashCode();
                }
                if (this.Background != null)
                {
                    hashCode = (hashCode * 59) + this.Background.GetHashCode();
                }
                if (this.RelatedAnime != null)
                {
                    hashCode = (hashCode * 59) + this.RelatedAnime.GetHashCode();
                }
                if (this.RelatedManga != null)
                {
                    hashCode = (hashCode * 59) + this.RelatedManga.GetHashCode();
                }
                if (this.Recommendations != null)
                {
                    hashCode = (hashCode * 59) + this.Recommendations.GetHashCode();
                }
                if (this.Statistics != null)
                {
                    hashCode = (hashCode * 59) + this.Statistics.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
